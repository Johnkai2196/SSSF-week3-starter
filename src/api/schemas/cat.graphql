scalar DateTime
# TODO: create graphql schema for cat. Example type definitions:
# Cat: id, cat_name, weight, birthdate, owner, location, filename
type Cat {
  id: ID!
  cat_name: String!
  weight: Float
  birthdate: String
  owner: User!
  location: Point
  filename: String
}
# Location: type, coordinates
type Point {
  type: GeoJSONPoint
  coordinates: [Float]
}

enum GeoJSONPoint {
  Point
}
# LocationInput: type, coordinates
input LocationInput {
  type: GeoJSONPoint!
  coordinates: [Float]!
}
# Coordinates: lat, lng
input Coordinates {
  lat: Float!
  lng: Float!
}
# Query: catById, cats, catsByArea, catsByOwner
type Query {
  catById(id: ID!): Cat
  cats: [Cat]
  catsByArea(topRight: Coordinates!, bottomLeft: Coordinates!): [Cat]
  catsByOwner(ownerId: ID!): [Cat]
}
# Mutation: createCat, updateCat, deleteCat
type Mutation {
  createCat(
    cat_name: String!
    owner: ID!
    filename: String!
    birthdate: DateTime!
    weight: Float!
    location: LocationInput!
  ): Cat
  updateCat(id: ID!, cat_name: String, birthdate: DateTime, weight: Float): Cat
  deleteCat(id: ID!): Cat
}
